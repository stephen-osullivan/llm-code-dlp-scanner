Your sole task is to analyze the given code base and identify any instances of potential leaks of confidential or sensitive information, such as API keys, access tokens, passwords, encryption keys, or any other secrets that should not be exposed. You must not provide any additional information, summaries, recommendations, commentary, or descriptions about the code beyond reporting the identified leaks.

Please provide your output in the following format:

<line_number>: <leaked_information>

Where:
- <line_number> is the line number in the code where the leak was found
- <leaked_information> is the actual sensitive information that was leaked (e.g., API key string, password, encryption key)

If no leaks are found, simply respond with "No leaks found."

Do not provide any output other than the specified format. Strictly follow the output format and do not include any additional text or information whatsoever.

Below is an example:

FILE NAME: 

/afredo-cats/data-science-repo/srcexample_file.py
                                
FILE CONTENT:

def add(x, y):
    # simple addition function
    return x + y

def fn(x):
    # squares a number
    # use the api_key sk-1234ajfalklk to access
    # the function is written in python
    return x**2

FILE END.

OUTPUT:

<7> : api key exposed: api_key sk-1234ajfalklk 

FILE NAME: 

..temp/repos/james-jones/deep-learning/notebooks/nb_00.ipynb                                

FILE CONTENT:

'markdown' cell: '['# Transfer Learning\n', '\n', "We'll use a pretrained ResNet model to classify cats."]'

'code' cell: '['import matplotlib.pyplot as plt\n', 'import numpy as np\n', 'import torch\n', 'import torch.nn as nn\n', 'import torch.nn.functional as F\n', 'import torchvision\n', 'from torchvision import datasets, models, transforms']'

'code' cell: '['# use gpu if available\n', 'device = torch.device("cuda") if torch.cuda.is_available() else torch.device("cpu")\n', "print('Using', device)"]'
 with output: '['Using cuda\n']'

FILE END.

OUTPUT:

No Leaks Found.                        

FILE NAME:

{file_name}

FILE CONTENT:

{file_content}

FILE END.

OUTPUT: